/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}html,body{box-sizing:border-box}@media (min-width: 768px){html,body{overflow:hidden;height:100%}}*,*:before,*:after{box-sizing:inherit}body{margin:2em}@media (min-width: 768px){body{margin:0;display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1 1 50%;-webkit-box-align:center;align-items:center}}.header,.content{padding:1rem 0}@media (min-width: 768px){.header,.content{-webkit-box-flex:1;flex:1;padding:3rem}}@media (min-width: 768px){.content{padding-left:0;max-height:100vh;overflow-y:auto}}section{position:relative;padding:2em 0;border-top:1px solid #ccc}section:last-of-type{border-bottom:1px solid #ccc}body{color:#666;font-family:Open Sans,sans-serif;line-height:1.5}h1:first-child,h2:first-child,h3:first-child,h4:first-child,h5:first-child,h6:first-child{margin-top:0}h1{margin:0;color:#888;font-family:Oswald,sans-serif;letter-spacing:-0.05em;line-height:0.9;font-size:23vw;word-spacing:-1vw}@media (min-width: 400px){h1{font-size:14.5vw}}@media (min-width: 768px){h1{font-size:12vw}}h2{color:#37806d;font-family:"Slabo 27px",serif}h3,h4,h5,h6{margin:2rem 0 1rem;color:#888}.accent{color:#d4e05c}a{color:inherit;font-weight:bold;text-decoration:none;border-bottom:1px dotted currentColor}a:hover{color:#37806d;border-bottom-style:solid}a:focus{color:#fff;outline:2px solid #3f927c;outline-width:0 2px;background:#3f927c;border:0}.top{position:absolute;top:2.5rem;right:-0.3rem;padding:0.2rem 0.5rem;font-size:0.7rem;text-transform:uppercase;border:0}@media (min-width: 768px){.top{display:none}}.header{font-size:1.5rem;font-family:"Slabo 27px",serif}.header__byline{margin-top:0.5rem;color:#ccc}.header__description{color:#37806d;text-align:center}@media (min-width: 400px){.header{text-align:center}.header__byline{font-size:5.5vw}}@media (min-width: 768px){.header{text-align:initial}.header__byline{font-size:3vw}}.ribbon{display:none}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
